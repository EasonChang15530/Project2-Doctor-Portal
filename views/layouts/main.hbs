<!DOCTYPE html>
<html>

<head>
  <title>Login</title>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />

  <!-- Favicons -->
  <link href="img/favicon.png" rel="icon">
  <link href="img/apple-touch-icon.png" rel="apple-touch-icon">

  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css">
  <link rel="stylesheet" type="text/css" href="css/util.css" />
  <link rel="stylesheet" type="text/css" href="css/main.css" />

  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.3/css/bootstrap.min.css">

  <!--external css-->
  <link href="lib/font-awesome/css/font-awesome.css" rel="stylesheet" />

  <link rel="stylesheet" type="text/css" href="lib/gritter/css/jquery.gritter.css" />
  <!-- Custom styles for this template -->
  <link href="css/style.css" rel="stylesheet">
  <link href="css/style-responsive.css" rel="stylesheet">
  <script src="lib/chart-master/Chart.js"></script>


  <link rel="stylesheet"
    href="https://cdn.jsdelivr.net/npm/@tarekraafat/autocomplete.js@7.2.0/dist/css/autoComplete.min.css">

  <script src="https://cdn.jsdelivr.net/npm/@tarekraafat/autocomplete.js@7.2.0/dist/js/autoComplete.min.js"></script>

  <link rel="stylesheet" type="text/css" href="css/zabuto_calendar.css">

</head>

<body>
  {{{body}}}
  <script src="vendor/jquery/jquery-3.2.1.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"></script>
  <script src="vendor/bootstrap/js/bootstrap.min.js"></script>

  <script src="lib/zabuto_calendar.js"></script>
  <script src="js/main.js"></script>
  <script src="js/index.js"></script>
  <!-- Calendar and top memnue-->
  <script class="include" type="text/javascript" src="lib/jquery.dcjqaccordion.2.7.js"></script>
  <script src="lib/common-scripts.js"></script>


  <script type="application/javascript">
    $(document).ready(function () {
      $("#date-popover").popover({
        html: true,
        trigger: "manual"
      });
      $("#date-popover").hide();
      $("#date-popover").click(function (e) {
        $(this).hide();
      });

      $("#my-calendar").zabuto_calendar({
        action: function () {
          return myDateFunction(this.id, false);
        },
        action_nav: function () {
          return myNavFunction(this.id);
        },
        ajax: {
          url: "show_data.php?action=1",
          modal: true
        },
        legend: [{
          type: "text",
          label: "Special event",
          badge: "00"
        },
        {
          type: "block",
          label: "Regular event",
        }
        ]
      });
    });

    function myNavFunction(id) {
      $("#date-popover").hide();
      var nav = $("#" + id).data("navigation");
      var to = $("#" + id).data("to");
      console.log('nav ' + nav + ' to: ' + to.month + '/' + to.year);
    }
  </script>


</body>


<script>

  // function showSection() {
  //   $("#edit-modal").show();
  //   $("#info-modal").hide();
  // }

  // $("#edit-btn").on("click", showSection);


  // This is the script for the search bar

  // autoComplete.js on typing event emitter
  document.querySelector("#autoComplete").addEventListener("autoComplete", event => {
    console.log(event);
  });
  // The autoComplete.js Engine instance creator
  const autoCompletejs = new autoComplete({
    data: {
      src: async () => {
        // Loading placeholder text
        document
          .querySelector("#autoComplete")
          .setAttribute("placeholder", "Loading...");
        // Fetch External Data Source
        const source = await fetch(
          "http://localhost:3000/api/patients/bydoctor"
        );
        const response = await source.json();

        const data = response.map((patient, index) => {
          patient.fullname = `${patient.firstname} ${patient.lastname}`;
          return patient;
        });
        // Post loading placeholder text
        document
          .querySelector("#autoComplete")
          .setAttribute("placeholder", "Patient Name");
        // Returns Fetched data
        return data;
      },
      key: ["fullname"],
      cache: false
    },
    sort: (a, b) => {
      if (a.match < b.match) return -1;
      if (a.match > b.match) return 1;
      return 0;
    },
    placeHolder: "Patient Name",
    selector: "#autoComplete",
    threshold: 0,
    debounce: 0,
    searchEngine: "strict",
    highlight: true,
    maxResults: 5,
    resultsList: {
      render: true,
      container: source => {
        source.setAttribute("id", "autoComplete_list");
      },
      destination: document.querySelector("#autoComplete"),
      position: "afterend",
      element: "ul"
    },
    resultItem: {
      content: (data, source) => {
        source.innerHTML = data.match;
      },
      element: "li"
    },
    noResults: () => {
      const result = document.createElement("li");
      result.setAttribute("class", "no_result");
      result.setAttribute("tabindex", "1");
      result.innerHTML = "No Results";
      document.querySelector("#autoComplete_list").appendChild(result);
    },
    onSelection: async feedback => {
      console.log(feedback.selection.value.fullname);
      const selection = feedback.selection.value.food;
      let fullname = feedback.selection.value.fullname;
      let id = feedback.selection.value.id;
      console.log("id " + id);
      console.log("name " + fullname);

      // const source = await fetch(
      //   "http://localhost:3000/api/patients/bydoctor" + id
      // );
      // const response = await source.json();

      let modal = document.querySelector("#info-modal")



      $("#search-modal").modal("hide");
      $("#patient-modal").modal("toggle");
      $("#patient-info").empty();
      $("#patient-info").append("<span>" + "<strong>" + "Name: " + "</strong>" + feedback.selection.value.lastname + " " + feedback.selection.value.firstname + "</span>" + "<br>" + "<span>" + "<strong>" + "Date of Birth: " + "</strong>" + feedback.selection.value.dob + "</span>" + "<br>" + "<span>" + "<strong>" + "Address: " + "</strong>" + feedback.selection.value.street + ", " + feedback.selection.value.city + ", " + feedback.selection.value.state + ", " + feedback.selection.value.zip + "</span>" + "<br>" + "<span>" + "<strong>" + "Phone: " + "</strong>" + feedback.selection.value.phone + "</span>" + "<br>" + "<br>" + "<span>" + "<strong>" + "Height: " + "</strong>" + feedback.selection.value.height + " in." + "</span>" + " " + "<span>" + "<strong>" + "Weight: " + "</strong>" + feedback.selection.value.weight + " lbn." + "</span>" + "<br>");
      $("#patient-info").append("<input type='hidden' id='patient-id' value='" + feedback.selection.value.id + "'>");
      // Render selected choice to selection div
      document.querySelector(".selection").innerHTML = selection;
      // Clear Input
      document.querySelector("#autoComplete").value = "";
      // Change placeholder with the selected value
      document
        .querySelector("#autoComplete")
        .setAttribute("placeholder", selection);
      // Concole log autoComplete data feedback
      console.log(feedback);
      function showSection() {
        $("#edit-modal").show();
        $("#info-modal").hide();
        $("#first-name-e").attr("value", feedback.selection.value.firstname);
        $("#last-name-e").attr("value", feedback.selection.value.lastname);
        $("#pt-dob-e").attr("value", feedback.selection.value.dob);
        $("#pt-weight-e").attr("value", feedback.selection.value.weight);
        $("#pt-height-e").attr("value", feedback.selection.value.height);
        $("#pt-email-e").attr("value", feedback.selection.value.email);
        $("#pt-phone-e").attr("value", feedback.selection.value.phone);
        $("#pt-street-e").attr("value", feedback.selection.value.street);
        $("#pt-city-e").attr("value", feedback.selection.value.city);
        $("#pt-state-e").attr("value", feedback.selection.value.state);
        $("#pt-zip-e").attr("value", feedback.selection.value.zip);


      }

      $("#edit-btn").on("click", showSection);
    }
  });

  // Toggle Search Engine Type/Mode
  document.querySelector(".toggeler").addEventListener("click", function () {
    // Holdes the toggle buttin alignment
    const toggele = document.querySelector(".toggele").style.justifyContent;

    if (toggele === "flex-start" || toggele === "") {
      // Set Search Engine mode to Loose
      document.querySelector(".toggele").style.justifyContent = "flex-end";
      document.querySelector(".toggeler").innerHTML = "Loose";
      autoCompletejs.searchEngine = "loose";
    } else {
      // Set Search Engine mode to Strict
      document.querySelector(".toggele").style.justifyContent = "flex-start";
      document.querySelector(".toggeler").innerHTML = "Strict";
      autoCompletejs.searchEngine = "strict";
    }
  });

  // Toggle results list and other elements
  const action = function (action) {
    const github = document.querySelector(".github-corner");
    const title = document.querySelector("h1");
    const mode = document.querySelector(".mode");
    const selection = document.querySelector(".selection");
    const footer = document.querySelector(".footer");

    if (action === "dim") {
      github.style.opacity = 1;
      title.style.opacity = 1;
      mode.style.opacity = 1;
      selection.style.opacity = 1;
      footer.style.opacity = 1;
    } else {
      github.style.opacity = 0.1;
      title.style.opacity = 0.3;
      mode.style.opacity = 0.2;
      selection.style.opacity = 0.1;
      footer.style.opacity = 0.1;
    }
  };

  // Toggle event for search input
  // showing & hidding results list onfocus / blur
  ["focus", "blur"].forEach(function (eventType) {
    const resultsList = document.querySelector("#autoComplete_list");

    document.querySelector("#autoComplete").addEventListener(eventType, function () {
      // Hide results list & show other elemennts
      if (eventType === "blur") {
        action("dim");
        resultsList.style.display = "none";
      } else if (eventType === "focus") {
        // Show results list & hide other elemennts
        action("light");
        resultsList.style.display = "block";
      }
    });
  });

  function startTime() {
    var today = new Date();
    var h = today.getHours();
    var m = today.getMinutes();
    var s = today.getSeconds();
    m = checkTime(m);
    s = checkTime(s);
    document.getElementById('txt').innerHTML =
      h + ":" + m + ":" + s;
    var t = setTimeout(startTime, 500);
  }
  function checkTime(i) {
    if (i < 10) { i = "0" + i };  // add zero in front of numbers < 10
    return i;
  }


</script>



</html>